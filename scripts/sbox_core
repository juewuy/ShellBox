#!/bin/sh
# Copyright (C) Juewuy

alias sbox="$SBOX_DIR/sbox_ctl"

ARCH=$(sbox get sbox.arch)
[ -z "$ARCH" ] && sbox ck_arch
ARCH_COMPA=$(sbox get sbox.arch_compa)
APP_DIR=$SBOX_DIR/tools/apps/$APP
BIN_DIR=$(sbox get sbox.bin_dir)	#内核文件存放目录
[ "$BIN_DIR" = 0 ] && BIN_DIR=APP_DIR

check_files(){
	remove(){
		rm -rf ${tmp_dir}
		sbox log "Core of $APP downloading failed ! Stop starting !" 1
		exit 1
	}
	update_url=$(sbox get sbox.update_url)
	#检查并下载内核
	core_file=$(cat $APP_DIR/sbox.config | grep -o "core_file" | awk -F '=' '{print $2}')
	if [ -n "core_file" ];then
		if [ ! -f $BIN_DIR/$core_file ];then
			tmp_dir=/tmp/ShellBox/tmp/${CORE}
			sbox log "Core of $APP is missing ! Downloading start !" 1
			sbox webget ${tmp_dir} ${update_url}/tools/apps/${APP}/bin/${CORE}_${ARCH} 2
			if [ "$?" = 0 ];then
				mv -f ${tmp_dir} $BIN_DIR/${CORE}
			else
				if [ "$ARCH_COMPA" != 0 ];then
					sbox webget ${tmp_dir} ${update_url}/tools/apps/${APP}/bin/${CORE}_${ARCH_COMPA}
					[ "$?" = 0 ] && mv -f ${tmp_dir} $BIN_DIR/${CORE} || remove		
				else
					remove
				fi
			fi
		fi
	fi
	#检查并下载依赖文件
	depend_file=$(cat $APP_DIR/sbox.config | grep -o "depend_file" | awk -F '=' '{print $2}')
	if [ -n "depend_file" ];then
		for file in $depend_file;do
			if [ ! -f $BIN_DIR/$file ];then
				tmp_dir=/tmp/ShellBox/tmp/${file}
				sbox log "Depend_file : $file of $APP is missing ! Downloading start !" 1
				sbox webget ${tmp_dir} ${update_url}/tools/apps/${APP}/bin/${file} 2
				if [ "$?" = 0 ];then
					if [ -n "$(echo $file|grep tar)" ];then
						tar -zxvf ${tmp_dir} -C $BIN_DIR/
					elif [ -n "$(echo $file|grep lib)" ];then
						i=
					else
						mv -f ${tmp_dir} $BIN_DIR/${file}
					fi
				else
					rm -rf ${tmp_dir}
					sbox log "Depend_file : $file of $APPP downloading failed ! Stop starting !" 1
					exit 1
				fi
			fi
		done
	fi			
}

start(){
	APP=$1
	PARA=$(sbox get $APP.para)			#命令参数，还得改
	
	[ -n "$(pidof "$CORE")" ] && sbox log "$APP is running !" && exit 1
	[ -f /tmp/ShellBox/config/$APP ] && retry=$(sbox get $APP.retry /tmp/ShellBox/config) 
	check_files
	#启动APP
	if [ retry -lt 5 ];then
		$APP_DIR/bin/$CORE $PARA > /dev/null &
		if [ $? != 0 ];then
			sbox log "Service $APP failed to start, retry: $retry"
			sbox set $APP.retry=$((retry+1)) /tmp/ShellBox/config
		else
			sbox del $APP.retry /tmp/ShellBox/config
		fi
	else
		sbox log "Stop retrying to start $APP !" 1
		sed -i "s/$APP/d" $SBOX_DIR/config/service.list
	fi
}

stop(){
	sed -i "s/$APP/d" $SBOX_DIR/config/service.list
	type killall >/dev/null 2>&1 && killall $CORE
    kill -9 "$(pidof "$CORE")" 2>/dev/null
}

boot(){
	APP=$1
	#check_files
	sh $APP_DIR/$APP.sh $PARA > /dev/null &
	if [ $? != 0 ];then
		sbox log "Service $APP failed to boot"
	fi
}

status(){
    [ -n "$(pidof $CORE)" ] && return 0 || return 1
}

main(){
	BOOT=/tmp/ShellBox_$USER/boot.done
	INT=$(sbox get sbox.interval)
	[ -z "$INT" ] && INT=30
	###############################
	if [ ! -f $BOOT ];then
		for service in $SBOX_DIR/config/boot.list;do
			boot $service
		done
		touch $BOOT
	fi
	###############################
	while [ -z "$1" ];do
		#检测并守护各个服务的状态
		for service in $SBOX_DIR/config/service.list;do
			[ -z "$(pidof $app)" ] && start $service
		done
		sleep $INT
	done
}

case "$1" in

start)		start $2		;;
stop)		stop $2			;;
restart)	stop $2 && \
			start $2		;;
status) 	status $2		;;
*) 			main $2			;;

esac
